---
# Clang-Tidy配置 - 现代C++ Lua解释器项目
Checks: >
  -*,
  bugprone-*,
  cppcoreguidelines-*,
  performance-*,
  portability-*,
  readability-*,
  modernize-*,
  google-*,
  misc-*,
  -bugprone-easily-swappable-parameters,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-vararg,
  -google-readability-todo,
  -misc-non-private-member-variables-in-classes,
  -readability-magic-numbers,
  -readability-uppercase-literal-suffix

CheckOptions:
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.FunctionCase
    value: lower_case
  - key: readability-identifier-naming.MethodCase
    value: lower_case
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: '_'
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: '_'
  - key: readability-identifier-naming.MacroCase
    value: UPPER_CASE
  - key: readability-identifier-naming.ConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.StaticConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.EnumConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.GlobalConstantCase
    value: UPPER_CASE
  - key: readability-function-size.LineThreshold
    value: 100
  - key: readability-function-size.StatementThreshold
    value: 50
  - key: performance-for-range-copy.WarnOnAllAutoCopies
    value: true
  - key: modernize-use-nullptr.NullMacros
    value: 'NULL'

WarningsAsErrors: >
  bugprone-*,
  performance-*,
  portability-*

HeaderFilterRegex: '.*\.(h|hpp)$'

AnalyzeTemporaryDtors: false

FormatStyle: file

User: lua_cpp

# 排除的文件模式
# 注意：这些路径是相对于项目根目录的
# build/*, tests/*, benchmarks/*文件会被跳过一些检查
ExtraArgs:
  - '-std=c++17'
  - '-Wall'
  - '-Wextra'